import Head from "next/head";
import { Container, Main, Title, AddTable } from "components/sharedstyles";
import { useEffect, useState } from "react";
import ReceiptItemLiest from "@/components/organisms/ReceiptItemList/ReceiptItemLiest";
import { ReceiptFetched } from "@/models/ReceiptsFetched";
import { Button } from "rsuite";
import moment from "moment";

const initialFormState = {
   // id: "",
   // vehicle: { id: "", name: "", licensePlate: "" },
   // name: "",
   // licensePlate: "",
   date: "",
   odometer: "",
   liters: "",
   pricePerLiter: "",
   currency: "EUR",
   valueAddedTax: 19,
   vehicleId: "",
};

const Home = () => {
   const [receipts, setReceipts] = useState<ReceiptFetched[] | null>(null);
   const [formValues, setFormValues] = useState(initialFormState);
   const [isLoading, setIsLoading] = useState(false);
   const [error, setError] = useState("");
   // console.log(formValues);

   useEffect(() => {
      const getData = async () => {
         try {
            setError("");
            setIsLoading(true);
            const resolve = await fetch("/api/receipts");

            const data: ReceiptFetched[] = await resolve.json();
            // console.log(data);
            setReceipts(data);
         } catch (err) {
            setError(err.message);
            console.error(err);
         } finally {
            setIsLoading(false);
         }
      };
      getData();
   }, []);
   // console.log(receipts);

   const handleInputChange = (e) => {
      // console.log(e.target.name);
      setFormValues({
         ...formValues,
         [e.target.name]: e.target.value,
      });
      // console.log(e.target.name);
   };

   const handleAddReceipt = async (e) => {
      e.preventDefault();

      // console.log(Date.now());
      // console.log(moment().toISOString());

      //new object creating-neueBelege:
      const newReceiptObj: ReceiptFetched = {
         // id: createId(),
         // vehicle: { id: createId(), name: formValues.name, licensePlate: formValues.licensePlate },
         date: moment().toISOString(),
         // date: (Date.now()).toISOString(),
         odometer: Number.parseInt(formValues.odometer),
         liters: Number.parseFloat(formValues.liters),
         pricePerLiter: Number.parseFloat(formValues.pricePerLiter),
         currency: "EUR",
         valueAddedTax: 19,
         vehicleId: formValues.vehicleId,
      };

      // console.log(receipts);
      setFormValues(initialFormState); //clearing the Form
      // post request sending:
      setReceipts([newReceiptObj, ...receipts]); // state updating-Belegeliste
      const res = await fetch("/api/receipts", {
         method: "POST",
         headers: {
            "Content-Type": "application/json",
         },
         body: JSON.stringify(newReceiptObj),
      });
      const newReceipt = await res.json();

      // checking res if is false:
      if (!res.ok) {
         console.log("Failed to send data.");
      }

      // checking res if is true
      if (res.ok) {
         console.log("Success", newReceipt);
      }
   };
   // console.log(handleAddReceipt());
   if (isLoading) {
      return (
         <div>
            <p>Loading...</p>
         </div>
      );
   }

   if (error) {
      return (
         <div>
            <p>{error}</p>
         </div>
      );
   }

   return (
      <Container>
         <Head>
            <title>Eine Liste der Tankbelege</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <Main>
            <Title>Add New Receipt:</Title>
            <form onSubmit={handleAddReceipt}>
               <AddTable>
                  <select name="vehicleId" onChange={handleInputChange} value={formValues.vehicleId}>
                     <option value="">Choose the Car</option>
                     <option value="clhvmqzdk0006mj08ftyjig9s">Cupra Formentor HD-TA-X44</option>
                     <option value="clhvmqzcj0002mj081no5h0m0">VW Passat HD-TA-X12</option>
                     <option value="clhvmqzd20004mj08fqaccv59">Seat Leon HD-TA-X20</option>
                  </select>
                  <input type="text" placeholder="...vehicleId" name="vehicleId" value={formValues.vehicleId} onChange={handleInputChange} />

                  <input type="text" placeholder="...odometer" onChange={handleInputChange} name="odometer" value={formValues.odometer} />
                  <input type="number" placeholder="...liters" onChange={handleInputChange} name="liters" value={formValues.liters} />
                  <input
                     type="number"
                     placeholder="...pricePerLiter"
                     onChange={handleInputChange}
                     name="pricePerLiter"
                     value={formValues.pricePerLiter}
                  />
               </AddTable>
               <Button type="submit">Add</Button>
            </form>
            <Title>All Receipts:</Title>
            <ReceiptItemLiest receipeets={receipts} />
         </Main>
      </Container>
   );
};

export default Home;
